# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'path/to/design.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import sys
import laba2
from PyQt5 import QtWidgets, QtGui
from PyQt5.QtWidgets import QMainWindow


class Laba2(QMainWindow, laba2.Ui_Laba2):
    def __init__(self):
        super().__init__()
        self.setupUi(self)
        self.galvanometer.display(None)

        self.left_pos_key = QtGui.QPixmap("images\\key_left.png")
        self.right_pos_key = QtGui.QPixmap("images\\key_right.png")
        self.middle_pos_key = QtGui.QPixmap("images\\key_middle.png")
        self.full_slot_battery = QtGui.QPixmap("images\\battery_in_slot.png")
        self.empty_slot_battery = QtGui.QPixmap("images\\slot_battery.png")

        self.label_key.setPixmap(self.middle_pos_key)

        self.key_slider.valueChanged.connect(self.change_picture_key)
        self.Reostat.valueChanged.connect(self.change_value_galvanometer)

        self.check_battery1.clicked.connect(self.change_slot_battery)
        self.check_battery2.clicked.connect(self.change_slot_battery)

    def change_picture_key(self):
        if self.key_slider.value() == 0:
            self.label_key.setPixmap(self.left_pos_key)
        elif self.key_slider.value() == 1:
            self.label_key.setPixmap(self.middle_pos_key)
        elif self.key_slider.value() == 2:
            self.label_key.setPixmap(self.right_pos_key)
        self.change_value_galvanometer()

    def change_value_galvanometer(self):
        value_reostat = self.Reostat.value() / 10 # значение реостата в сантиметрах,от 0 до 24 см с шагом в 0.1 см
        if self.key_slider.value() == 0:  # левая позиция ключа
            if value_reostat < 14.5:
                self.galvanometer.display(-(14.5 / 0.152 - value_reostat / 0.152))
            else:
                self.galvanometer.display(value_reostat / 0.152 - 14.5 / 0.152)

        elif self.key_slider.value() == 1:  # центральная позиция ключа(разомкнут)
            self.galvanometer.display(None)

        elif self.key_slider.value() == 2:  # правая позиция ключа
            if self.check_battery1.isChecked() or self.check_battery2.isChecked():
                if value_reostat < 21.5:
                    self.galvanometer.display(-(21.5 / 0.165 - value_reostat / 0.165))
                else:
                    self.galvanometer.display(value_reostat / 0.165 - 21.5 / 0.165)
            else:
                self.galvanometer.display(0)

    def change_slot_battery(self):
        if self.check_battery1.isChecked():
            self.label_battery1.hide()
            self.slot_battery1.setPixmap(self.full_slot_battery)
        else:
            self.slot_battery1.setPixmap(self.empty_slot_battery)
            self.label_battery1.show()

        if self.check_battery2.isChecked():
            self.slot_battery2.setPixmap(self.full_slot_battery)
            self.label_battery2.hide()
        else:
            self.slot_battery2.setPixmap(self.empty_slot_battery)
            self.label_battery2.show()
        self.change_value_galvanometer()

if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    window = Laba2()
    window.show()
    app.exec_()
    input()
